Attribute VB_Name = "Speichern"
Option Explicit
Private Declare Function WritePrivateProfileString Lib "kernel32" Alias "WritePrivateProfileStringA" (ByVal lpApplicationName As String, ByVal lpKeyName As Any, ByVal lpString As Any, ByVal lpFileName As String) As Long
Public Sub save()
    Dim i As Integer
    
    Call saveini("Grund-Einstellungen", "Ziel", frmMain.Ziel.Text)
    Call saveini("Grund-Einstellungen", "Quelle", frmMain.Quelle.Text)
    Call saveini("Grund-Einstellungen", "Arbeit", frmMain.work.Text)
    Call saveini("Grund-Einstellungen", "Keine Konvertierung", frmMain.noextension.Value)
    Call saveini("Grund-Einstellungen", "MP3", frmMain.mp3extension.Value)
    Call saveini("Grund-Einstellungen", "MP2", frmMain.mp2extension.Value)
    Call saveini("Grund-Einstellungen", "OGG", frmMain.oggextension.Value)
    Call saveini("MP3-CBR-Einstellungen", "Lamestring", MP3cbrparameter)
    Call saveini("MP3-CBR-Einstellungen", "Bitrate", MP3cbrmenu.cbrbitrate.ListIndex)
    Call saveini("MP3-CBR-Einstellungen", "Qualität", MP3cbrmenu.Slider1.CurPosition)
    Call saveini("MP3-CBR-Einstellungen", "Stereomode", MP3cbrmenu.stereomode.ListIndex)
    Call saveini("MP3-VBR-Einstellungen", "Lamestring", MP3vbrparameter)
    Call saveini("MP3-VBR-Einstellungen", "Neue Methode", MP3vbrmenu.neu.Value)
    Call saveini("MP3-VBR-Einstellungen", "Alte Methode", MP3vbrmenu.alt.Value)
    Call saveini("MP3-VBR-Einstellungen", "Maximale Bitrate", MP3vbrmenu.maxbit.ListIndex)
    Call saveini("MP3-VBR-Einstellungen", "Minimale Bitrate", MP3vbrmenu.minbit.ListIndex)
    Call saveini("MP3-VBR-Einstellungen", "Stereomode", MP3vbrmenu.stereomode.ListIndex)
    Call saveini("MP3-VBR-Einstellungen", "Qualität", MP3vbrmenu.Slider1.CurPosition)
    Call saveini("MP3-ABR-Einstellungen", "Lamestring", MP3abrparameter)
    Call saveini("MP3-ABR-Einstellungen", "Bitrate", MP3abrmenu.abrbitrate.ListIndex)
    Call saveini("MP3-ABR-Einstellungen", "Stereomode", MP3abrmenu.stereomode.ListIndex)
    Call saveini("MP3-ABR-Einstellungen", "Qualität", MP3abrmenu.Slider1.CurPosition)
    Call saveini("MP2-CBR-Einstellungen", "Bitrate", MP2cbrmenu.cbrbitrate.Text)
    Call saveini("MP2-CBR-Einstellungen", "Stereomode", MP2cbrmenu.stereomode.Text)
    Call saveini("MP2-CBR-Einstellungen", "Parameter", MP2cbrparameter)
    Call saveini("MP2-VBR-Einstellungen", "Bitrate", MP2vbrmenu.cbrbitrate.Text)
    Call saveini("MP2-VBR-Einstellungen", "Stereomode", MP2vbrmenu.stereomode.Text)
    Call saveini("MP2-VBR-Einstellungen", "Parameter", MP2vbrparameter)
    Call saveini("MP2-VBR-Einstellungen", "Bitrate / Bevorzugung", MP2vbrmenu.Slider1.CurPosition)
    Call saveini("OGG-Einstellungen", "Maximale Bitrate", oggmenu.maxbit.Text)
    Call saveini("OGG-Einstellungen", "Minimale Bitrate", oggmenu.minbit.Text)
    Call saveini("OGG-Einstellungen", "Mittlere Bitrate", oggmenu.abrbit.Text)
    Call saveini("OGG-Einstellungen", "Management Engine", oggmenu.managementengine.Value)
    Call saveini("OGG-Einstellungen", "Normale Engine", oggmenu.normalengine.Value)
    Call saveini("OGG-Einstellungen", "Qualität", oggmenu.Slider1.CurPosition)
    Call saveini("OGG-Einstellungen", "Max aktiv", oggmenu.maxaktiv.Value)
    Call saveini("OGG-Einstellungen", "Min aktiv", oggmenu.minaktiv.Value)
    Call saveini("OGG-Einstellungen", "ABR aktiv", oggmenu.abraktiv.Value)
    Call saveini("OGG-Einstellungen", "Parameter", OGGparameter)
    Call saveini("Aktivierungs-Einstellungen", "MP3-Normalize", Aktivierauswahl.mp3normal_aktiv.Value)
    Call saveini("Aktivierungs-Einstellungen", "MP3-Gain", Aktivierauswahl.mp3gain_aktiv.Value)
    Call saveini("Aktivierungs-Einstellungen", "Scannen", Aktivierauswahl.scan_aktiv.Value)
    Call saveini("Aktivierungs-Einstellungen", "Sortierung", Aktivierauswahl.sort_aktiv.Value)
    Call saveini("Aktivierungs-Einstellungen", "MP3-CBR", Aktivierauswahl.mp3_cbr_aktiv.Value)
    Call saveini("Aktivierungs-Einstellungen", "MP3-VBR", Aktivierauswahl.mp3_vbr_aktiv.Value)
    Call saveini("Aktivierungs-Einstellungen", "MP3-ABR", Aktivierauswahl.mp3_abr_aktiv.Value)
    Call saveini("Aktivierungs-Einstellungen", "MP2-CBR", Aktivierauswahl.mp2_cbr_aktiv.Value)
    Call saveini("Aktivierungs-Einstellungen", "MP2-VBR", Aktivierauswahl.mp2_vbr_aktiv.Value)
    Call saveini("Aktivierungs-Einstellungen", "Zeitsteuerung", Aktivierauswahl.timec.Value)
    Call saveini("Aktivierungs-Einstellungen", "MP2-Normalize", Aktivierauswahl.mp2normal_aktiv.Value)
    Call saveini("Aktivierungs-Einstellungen", "OGG-Normalize", Aktivierauswahl.oggnormal_aktiv.Value)
    Call saveini("Aktivierungs-Einstellungen", "Playlist Logger", Aktivierauswahl.plloggeraktiv.Value)
    Call saveini("Allgemeine-Einstellungen", "Quelldateien löschen", allgemeine.quelldel.Value)
    Call saveini("Allgemeine-Einstellungen", "Sprache", allgemeine.Sprache)
    Call saveini("Allgemeine-Einstellungen", "CPU Meter", allgemeine.cpuaktiv.Value)
    If frmMain.turbo.Value = "0" Then Call saveini("Allgemeine-Einstellungen", "MCE-Manager Priority", allgemeine.Prio_mce.ListIndex)
    If frmMain.turbo.Value = "0" Then Call saveini("Allgemeine-Einstellungen", "Shell Priority", allgemeine.prio_shell.ListIndex)
    Call saveini("Allgemeine-Einstellungen", "Minimized", allgemeine.autostart.Value)
    Call saveini("Allgemeine-Einstellungen", "Unzensiert", allgemeine.bevorzugen.Value)
    Call saveini("Allgemeine-Einstellungen", "Vorhandene Song ersetzten", allgemeine.ueberschreiben.Value)
    Call saveini("Allgemeine-Einstellungen", "Dos Tools", allgemeine.showdos.Value)
    Call saveini("Allgemeine-Einstellungen", "MP2 Test", allgemeine.mp2test.Value)
    Call saveini("Allgemeine-Einstellungen", "Zeitsync vor Prozess", allgemeine.timesync_konv.Value)
    Call saveini("Allgemeine-Einstellungen", "Coverdownload", allgemeine.coverdownload.Value)
    Call saveini("Allgemeine-Einstellungen", "Splashscreen", allgemeine.spshow.Value)
    Call saveini("Allgemeine-Einstellungen", "Ignoriere Format", allgemeine.igext.Value)
    Call saveini("MP3-Gain-Einstellungen", "Konstante Verstärkung", mp3gain.constant.Value)
    Call saveini("MP3-Gain-Einstellungen", "Automatische Verstärkung", mp3gain.auto.Value)
    Call saveini("MP3-Gain-Einstellungen", "Wert der Verstärkung", mp3gain.Slider1.CurPosition)
    Call saveini("MP3-Gain-Einstellungen", "Mp3gain-string", mp3gainstring)
    Call saveini("Normalize-Einstellungen", "Prozentuelle Verstärkung", normal.prozenable)
    Call saveini("Normalize-Einstellungen", "Prozentuellewert", normal.peakprozslider.CurPosition)
    Call saveini("Normalize-Einstellungen", "Konstante Verstärkung", normal.dbenable.Value)
    Call saveini("Normalize-Einstellungen", "DB-Wert", normal.peakdbslider.CurPosition)
    Call saveini("Normalize-Einstellungen", "Buffer", normal.bufferslider.CurPosition)
    Call saveini("Normalize-Einstellungen", "Parameter", normoptions)
    Call saveini("Scannen-Einstellungen", "Sekunden", Scannen.sec_wahl.Value)
    Call saveini("Scannen-Einstellungen", "Minuten", Scannen.min_wahl.Value)
    Call saveini("Scannen-Einstellungen", "Stunden", Scannen.hour_wahl.Value)
    Call saveini("Scannen-Einstellungen", "Tage", Scannen.day_wahl.Value)
    Call saveini("Scannen-Einstellungen", "Wert", Scannen.Slider_takt.CurPosition)
    Call saveini("Scannen-Einstellungen", "File Grenzwert", Scannen.minfiles.CurPosition)
    Call saveini("Sortierung-Einstellungen", "Verzeichnis1", sort.v1.ListIndex)
    Call saveini("Sortierung-Einstellungen", "Verzeichnis2", sort.V2.ListIndex)
    Call saveini("Sortierung-Einstellungen", "Verzeichnis3", sort.V3.ListIndex)
    Call saveini("Sortierung-Einstellungen", "Verzeichnis4", sort.V4.ListIndex)
    Call saveini("Sortierung-Einstellungen", "Nach Komma abschneiden", sort.komma.Value)
    Call saveini("Sortierung-Einstellungen", "Artikel abschneiden", sort.artikel.Value)
    Call saveini("Tagging-Einstellungen", "Driftrate", tagging.drift.CurPosition)
    Call saveini("Tagging-Einstellungen", "MP2 unterhalb löschen", tagging.delsize(0).CurPosition)
    Call saveini("Tagging-Einstellungen", "Korrektursymbol", tagging.korrsymbol.ListIndex)
    Call saveini("Tagging-Einstellungen", "Zeitauswahl", tagging.zeitauswahl.ListIndex)
    Call saveini("Tagging-Einstellungen", "MP2 Längenabweichung", tagging.dauerslider(1).CurPosition)
    Call saveini("Tagging-Einstellungen", "Songtext download", allgemeine.textdownload.Value)
    Call saveini("Zeitsteuerung-Einstellungen", "Startzeit Stunde", Zeitsteuerung.starth.ListIndex)
    Call saveini("Zeitsteuerung-Einstellungen", "Startzeit Minute", Zeitsteuerung.startm.ListIndex)
    Call saveini("Zeitsteuerung-Einstellungen", "Endzeit Stunde", Zeitsteuerung.endh.ListIndex)
    Call saveini("Zeitsteuerung-Einstellungen", "Endzeit Minute", Zeitsteuerung.endm.ListIndex)
    Call saveini("Zeitsteuerung-Einstellungen", "Montag", Zeitsteuerung.montag.Value)
    Call saveini("Zeitsteuerung-Einstellungen", "Dienstag", Zeitsteuerung.Dienstag.Value)
    Call saveini("Zeitsteuerung-Einstellungen", "Mittwoch", Zeitsteuerung.Mittwoch.Value)
    Call saveini("Zeitsteuerung-Einstellungen", "Donnerstag", Zeitsteuerung.Donnerstag.Value)
    Call saveini("Zeitsteuerung-Einstellungen", "Freitag", Zeitsteuerung.Freitag.Value)
    Call saveini("Zeitsteuerung-Einstellungen", "Samstag", Zeitsteuerung.Samstag.Value)
    Call saveini("Zeitsteuerung-Einstellungen", "Sonntag", Zeitsteuerung.Sonntag.Value)
    Call saveini("Neutrino, Dreambox, Enigma, Kanal-Umsetzung", "Aufnahme", frmMain.senderauswahl.ListIndex)
    Call saveini("Neutrino, Dreambox, Enigma, Kanal-Umsetzung", "Port", d2set.Port.Text)
    Call saveini("Neutrino, Dreambox, Enigma, Kanal-Umsetzung", "IP", d2set.IP.Text)
    Call saveini("Neutrino, Dreambox, Enigma, Kanal-Umsetzung", "Passwort", d2set.pw.Text)
    Call saveini("Neutrino, Dreambox, Enigma, Kanal-Umsetzung", "Benutzername", d2set.Text45.Text)
    Call saveini("Neutrino, Dreambox, Enigma, Kanal-Umsetzung", "D-Box", d2set.db2.Value)
    Call saveini("Neutrino, Dreambox, Enigma, Kanal-Umsetzung", "Dreambox / Enigma", d2set.dreamb.Value)
    Call saveini("Datenbank", "Sortierung", DBdurchsuchen.Auswahl.ListIndex)
    Call saveini("On Air", "Auswahl", OnAir.onairsender.ListIndex)
    
    For i = 0 To 20
        Call saveini("Neutrino, Dreambox, Enigma, Kanal-Umsetzung", Str$(i) + ".EPG-Name", d2set.SenderID(i).Text)
        Call saveini("Genre-Einstellungen", "Genre" + Str$(i), Genre.genreID(i).Text)
        Call saveini("Neutrino, Dreambox, Enigma, Kanal-Umsetzung", Str$(i) + ".APid", d2set.APidID(i).Text)
        Call saveini("Neutrino, Dreambox, Enigma, Kanal-Umsetzung", Str$(i) + ".Multi-channel 1", d2set.T1(i).Value)
        Call saveini("Neutrino, Dreambox, Enigma, Kanal-Umsetzung", Str$(i) + ".Multi-channel 2", d2set.T2(i).Value)
        Call saveini("Neutrino, Dreambox, Enigma, Kanal-Umsetzung", Str$(i) + ".Multi-channel 3", d2set.T3(i).Value)
        Call saveini("Playlist", Str$(i) + ".Playlistname", plbezeichnung.plID(i).Text)
        Call saveini("Playlist", Str$(i) + ".Kennung", PlaylistLoggerSettings.kennung(i).Text)
        Call saveini("Playlist", Str$(i) + ".Verwendung Logged", PL_Verwendung.uselogged(i).Value)
        Call saveini("Playlist", Str$(i) + ".Verwendung Online", PL_Verwendung.useonline(i).Value)
    Next i
    
    MsgBox "saved!"
End Sub
Private Sub saveini(Menu1 As String, Menu2 As String, Wert As String)
    Dim WWert As String
    
    WWert = Wert
    If Wert = "True" Or Wert = "Wahr" Then WWert = "1"
    If Wert = "False" Or Wert = "Falsch" Then WWert = "0"
    Call WritePrivateProfileString(Menu1, Menu2, WWert, App.Path + "\settings.ini")
End Sub

